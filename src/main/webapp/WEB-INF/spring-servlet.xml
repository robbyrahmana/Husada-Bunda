<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop = "http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop 
   		http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- Enable webMVC -->
	<mvc:annotation-driven />
	<!-- Enable Cache -->
	<cache:annotation-driven />

	<context:component-scan base-package="com.cinovation.web" />

	<!-- Start Sorting and Pagination -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<ref bean="sortResolver" />
			<ref bean="pageableResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<bean id="sortResolver"
		class="org.springframework.data.web.SortHandlerMethodArgumentResolver" />
	<bean id="pageableResolver"
		class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
		<constructor-arg ref="sortResolver" />
	</bean>
	<!-- End Sorting and Pagination -->

	<mvc:cors>
		<mvc:mapping path="/**" allowed-origins="http://localhost:3000, *"
			allowed-methods="POST, GET, PUT, DELETE"
			allowed-headers="X-Requested-With, Content-Type, X-Codingpedia,Authorization, Accept, Origin"
			allow-credentials="false" max-age="3600" />
	</mvc:cors>

	<!-- http://www.baeldung.com/entity-to-and-from-dto-for-a-java-spring-application -->
	<bean name="modelMapper" class="org.modelmapper.ModelMapper" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>/WEB-INF/config/database.properties</value>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename" value="messages/messages" /> <property name="useCodeAsDefaultMessage" 
		value="true" /> </bean> -->

	<bean id="messageSource" class="com.cinovation.web.validator.DatabaseMessageSource">
	</bean>

	<!-- Configuring interceptors based on URI -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.cinovation.web.logger.Tracker"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="customizableTraceInterceptor"
		class="com.cinovation.web.logger.TraceInterceptor">
		<property name="enterMessage" value=">>>>> START Execution $[methodName](..) ****************************************************************************************************" />
		<property name="exitMessage" value=">>>>> END Execution $[methodName](..) in $[invocationTime]ms ******************************************************************************************************" />
	</bean>

	<aop:config>
		<aop:advisor advice-ref="customizableTraceInterceptor" pointcut="execution(public * com.cinovation.web.service.*.*(..))"/>
		<aop:advisor advice-ref="customizableTraceInterceptor" pointcut="execution(public * com.cinovation.web.service.*.*.*(..))"/>
	</aop:config>

	<!-- 
	<aop:config>
		<aop:aspect id="log" ref="repository">
			<aop:pointcut id="repositoryexec" expression="execution(public * com.cinovation.web.repository.*.*(..))"/>
			<aop:before pointcut-ref="repositoryexec" method="befoceExec"/>
			<aop:after pointcut-ref="repositoryexec" method="afterExec"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="repository" class="com.cinovation.web.logger.Database"/> 
	 -->
</beans>